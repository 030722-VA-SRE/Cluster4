pipeline {
    agent any
    environment{
        registry= 'miggarcia338/chip-shop'
        dockerHubCreds = 'dockerhub'
        dockerImage =''
    }
    stages {
        stage('Code quality analysis'){
            steps{
                withSonarQubeEnv(credentialsId: 'sonar-token', installationName: 'sonar')}{
                    sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=030722-VA-SRE_Cluster4'
                }
            }
        stage('Maven clean package'){
            steps{
                sh 'mvn clean package -Dmaven.test.skip'
            }
        }
        stage('Docker build') {
            steps {
                script {
                    docker.withRegistry('', 'docker-jenkins-token') {
                        dockerImage = docker.build "$registry"
                        dockerImage.push("$currentBuild.number")
                        dockerImage.push("latest")
                    }
                    
                    container('kubectl') {
                      withKubeConfig([credentialsId: 'kubeconfig']) {
                          sh "aws eks update-kubeconfig --name kevin-sre-1285 --region us-east-1 "
                          sh 'kubectl get pods'
                          sh "kubectl patch deployment deployment-name --set-image=$IMAGE_NAME:$IMAGE_TAG"
                      }
                    }
                }
            }
        }
        stage('Waiting for approval'){
            steps{
                script{
                    try {
                        timeout(time:10, unit: 'MINUTES'){
                            approved = input mesasage: 'Deploy to production?', ok: 'Continue',
                                parameters: [choice(name: 'approved', choices: 'Yes\nNo', description: 'Deploy this build to production')]
                            if(approved != 'Yes'){
                                error('Build not approved')
                            }
                        }
                    } catch (error){
                        error('Build not approved in time')
                    }
                }
            }
        }
        stage("Deploy to production"){
            steps{
                script{
                    withAWS(credentials: 'SRE aws credentials', region: 'us-east-1'){
                        sh 'curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"'
                        sh 'chmod u+x ./kubectl'
                        sh 'aws eks update-kubeconfig --name kevin-sre-1285'
                        sh './kubectl get pods -n chip-shop'
                        sh "echo $registry:$currentBuild.number"
                        sh "./kubectl set image -n chip-shop deployment/demo-deployment demo-container=$registry:$currentBuild.number"
                    }
                }
            }
        }
    }
}